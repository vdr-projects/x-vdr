# Global config file for vdrshutdown

# Specify which wakeup-mode you prefer (0=none/1=acpi-wakeup/2=nvram-wakeup/3=extension-board)
WAKEUP_MODE="0"


### nvram-wakeup
##
# Read board configuration from specified configuration file (e.g: /etc/nvram-wakeup.conf)
NVRAM_CONFIG=""

# Specify the iw (infowriter) name (e.g: gigabyte_5aa)
NVRAM_IWNAME=""

# Try "nvram-wakeup --help", don't use --wakeupbefore here
NVRAM_OPT=""

# Needs your mainboard a reboot? (0=false/1=true/2=allways)
NEED_REBOOT="0"

# If you use grub-set-default X, enter (0-9) for X
GRUB_POWEROFF=2

# Do you use lilo instead of grub? (0=false/1=true)
LILO="0"


### acpi-wakeup, nvram-wakeup and extension-board
##
# Specify how many minutes before the programmed wakeuptime the computer should wake up
WAKEUP_BEFORE=5

# Set this to "0", "MAXIMAL", "INTERVAL" or your max-power-off-time in minutes
MAX_POWEROFF_TIME="0"

# If you has set MAX_POWEROFF_TIME to "INTERVAL", specify the interval in days and your dreamtime in hours:minutes
INTERVAL="3"       # days
DREAMTIME="03:00"  # hours:minutes

# Action if $MIN_WAKEUPTIME -gt $WAKEUPTIME
MIN_WAKEUP_VAR="0"

# Waiting period in minutes if CHECK_PROCS is active
WAITING_PERIOD="15"

# to abort the shutdown
#
# format: <tests>                        && <osd + logger message>
#
CHECK_PROCS=\
"
test -s $VDRCONFDIR/plugins/queue.vdrrip && echo 'vdrrip laeuft'
pidof -x vdr-no-shutdown >/dev/null 2>&1 && echo 'vdr-no-shutdown laeuft'
pidof -x updateepg.sh >/dev/null 2>&1    && echo 'updateepg laeuft'
pidof -x tvm2vdr.pl >/dev/null 2>&1      && echo 'tvmovie2vdr laeuft'
pidof infosatepg >/dev/null 2>&1         && echo 'infosatepg laeuft'
pidof cutinplace >/dev/null 2>&1         && echo 'cutinplace laeuft'
pidof transcode >/dev/null 2>&1          && echo 'transcode laeuft'
pidof vcdimager >/dev/null 2>&1          && echo 'vcdimager laeuft'
pidof mencoder >/dev/null 2>&1           && echo 'mencoder laeuft'
pidof tosvcd >/dev/null 2>&1             && echo 'tosvcd laeuft'
pidof lame >/dev/null 2>&1               && echo 'lame laeuft'
pidof noad >/dev/null 2>&1               && echo 'noad laeuft'
netstat -n|grep ^tcp|egrep -q ':22 '     && echo 'ssh client(s) connected'
netstat -n|grep ^tcp|egrep -q ':139 '    && echo 'smb client(s) connected'
netstat -n|grep ^tcp|egrep -q ':2004 '   && echo 'streamdev client(s) connected'
grep -qs ^ /var/lib/nfs/rmtab            && echo 'nfs client(s) connected'
"

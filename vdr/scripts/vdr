#! /bin/sh
### BEGIN INIT INFO
# Provides:          vdr
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Linux Video Disk Recorder
### END INIT INFO
#  x-vdr (Installations-Skript fuer einen VDR mit Debian als Basis)
#  von Marc Wernecke - www.zulu-entertainment.de
#  12.02.2009
#  /etc/init.d/vdr

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DESC="Linux Video Disk Recorder"
NAME="vdr"
LOGGER="logger -s ${0##*/} "

if [ -f /etc/default/vdr ]; then
  . /etc/default/vdr
else
  $LOGGER "exit, because /etc/default/vdr does not exists"
  exit 1
fi

DAEMON=$VDRBINDIR/runvdr
PIDFILE=/var/run/runvdr.pid

test -x "$DAEMON" || exit 0
test -x "$VDRPRG" || exit 0

function clean_console() {
  if [ "$KEYB_TTY" != "" ]; then
    tput -Tlinux clear > $KEYB_TTY
  fi
}

function switch_console() {
  if [ "$KEYB_TTY" != "" ]; then
    clean_console
    echo -e "This tty is currently mapped to VDR, keypresses aren't echoed.\r" > $KEYB_TTY
    echo -n "For a login prompt switch to another console." > $KEYB_TTY
    chvt `echo "$KEYB_TTY" | sed "s/\/dev\/tty//"`
    REDIRECT="< $KEYB_TTY"
  fi
}

function get_status() {
  if start-stop-daemon --start --startas $DAEMON --test \
    --name $(basename $DAEMON) --pidfile $PIDFILE >/dev/null
  then
    echo " - is not running."
    exit 3
  else
    echo " - is running."
    exit 0
  fi
}

function startvdr() {
  if [ "$AUTOSTART" != "off" ]; then
    # only start vdr if there is no other instance running
    if start-stop-daemon --start --startas $DAEMON --test \
      --name $(basename $DAEMON) --pidfile $PIDFILE >/dev/null
    then
      # stopping dvb-bootsplash (mplayer)
      [ -x /etc/init.d/dvb-bootsplash ] && /etc/init.d/dvb-bootsplash stop
      # starting LCDd
      # uncomment this only if you DONT use the systems init rc
#     [ "$LCDproc" = "on" ] && [ -f /etc/init.d/lcdd ] && /etc/init.d/lcdd start &
      # starting Video Disk Recorder
#     switch_console
      start-stop-daemon --start --quiet --startas $DAEMON --background \
      --name $(basename $DAEMON) --pidfile $PIDFILE --make-pidfile -- $REDIRECT
    else
      echo -n " - seems to be running already"
    fi
  else
     echo -n " - aborted (to enable the daemon, set AUTOSTART=\"on\" in /etc/default/vdr)"
  fi
}

function stopvdr() {
  if start-stop-daemon --stop --retry 30 \
    --name $(basename $DAEMON) --pidfile $PIDFILE >/dev/null
  then
    start-stop-daemon --stop --retry 30 --oknodo --exec $VDRPRG >/dev/null
    rm -f $PIDFILE
    clean_console
    # graphlcd shutdown sequence
    [ "$graphlcd_base" = "on" ] && [ -f /etc/init.d/x-lcd ] && /etc/init.d/x-lcd stop
    # stopping LCDd
    # uncomment this only if you DONT use the systems init rc
#   [ "$LCDproc" = "on" ] && [ -f /etc/init.d/lcdd ] && /etc/init.d/lcdd stop
  else
    echo -n " - seems not to be running"
  fi
}

case "$1" in
  start)
    echo -n "Starting $DESC: $NAME"
    startvdr
    echo "."
    ;;
  stop)
    echo -n "Stopping $DESC: $NAME"
    stopvdr
    echo "."
    ;;
  restart|force-reload)
    echo -n "Restarting $DESC: $NAME"
    stopvdr
    sleep 4
    startvdr
    echo "."
    ;;
  status)
    echo -n "Getting status of $DESC: $NAME"
    get_status
    ;;
  *)
    N=/etc/init.d/$NAME
    echo "Usage: $N {start|stop|restart|force-reload}" >&2
    exit 1
    ;;
esac

exit 0
